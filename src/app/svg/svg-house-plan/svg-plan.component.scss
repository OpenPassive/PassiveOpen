$sensor-smoke: rgb(168, 0, 0);
$sun-color: rgb(253, 200, 101);
::ng-deep {
  .floor-top .included-stairs-plan .floor-clip {
    clip-path: inherit;
  }
  .included-stairs-plan {
    pointer-events: none;
  }

  .sensor-water-cold,
  .sensor-dimmer,
  .sensor-pir,
  .sensor-vent-out,
  .sensor-ethernet,
  .sensor-perilex,
  .sensor-light-switch {
    fill: var(--primary-color);
    &.sensor-cable {
      stroke: var(--primary-color) !important;
    }
  }
  .sensor-water-warm,
  .sensor-vent-in,
  .sensor-camera,
  .sensor-poe,
  .sensor-socket,
  .sensor-light-bulb {
    fill: var(--accent-color);
    &.sensor-cable {
      stroke: var(--accent-color) !important;
    }
  }

  .sensor-drain,
  .sensor-alarm,
  .sensor-light-switch {
    fill: var(--first-color);
    &.sensor-cable {
      stroke: var(--first-color) !important;
    }
  }
  .sensor-shower,
  .sensor-dlc,
  .sensor-wifi,
  .sensor-blinds {
    fill: var(--second-color);
    &.sensor-cable {
      stroke: var(--second-color) !important;
    }
  }

  .sensor-water-rain,
  .sensor-temperature {
    fill: var(--third-color);
    &.sensor-cable {
      stroke: var(--third-color) !important;
    }
  }

  .sensor-smoke {
    fill: $sensor-smoke;
    &.sensor-cable {
      stroke: $sensor-smoke !important;
    }
  }

  //dev only

  // .el-group-6,
  // .el-group-5,
  // .el-group-4,
  // .el-group-3,
  // .el-group-2,
  // .el-group-1 {
  //   display: none;
  // }

  .selection-active {
    .g-sensor {
      & > *:not(.selected) {
        opacity: 0 !important;
      }
    }
  }

  svg.plan {
    // transform-box: fill-box;
    height: 100%;
    width: 100%;
    position: relative;

    g.all {
      // transition: 1s ease-in-out; // overruled to 0 in fullscreen
    }

    polyline[id^="roof-line-"] {
      fill: none;
      stroke: var(--primary-color);
    }
    #hall-edge,
    #balcony-edge {
      stroke: var(--color-60);
    }
    .g-sun {
      transition: 0.4s;
      opacity: 0;
      g {
        transform-origin: center;
        fill: $sun-color;
      }
    }
    #view-lines {
      fill: none;
      stroke: var(--primary-color);
      opacity: 0;
    }
    .render-img {
      pointer-events: none;
      transition: 0.4s;
      opacity: 0;
      // clip-path: polygon(
      //   0% 0%,
      //   100% 0%,
      //   100% 130%,
      //   51.7% 78.7%,
      //   51.7% 52.9%,
      //   42.4% 36.5%,
      //   33.1% 36.5%
      // );
    }

    .house-wind-rose
    // .g-room
    {
      fill: none;
      transition: 0.4s, stroke-width 1ms;
      stroke: black;
      stroke-linecap: square;
      // opacity: 0.8;
    }

    #tower-walls {
      fill: var(--accent-color);
      stroke: none;
      pointer-events: none;
      opacity: 0.6;
    }

    .house-stramien {
      transition: 0.4s, stroke-width 1ms;
      stroke: var(--first-color);
      .house-stramien-out {
        stroke: var(--second-color);
      }
      stroke-linecap: square;
    }

    .house-wind-rose {
      opacity: 0;
      .house-wind-rose-text {
        stroke: none;
        fill: currentColor;
      }
      .house-wind-rose-1 {
        fill: currentColor;
      }
    }

    .g-grid {
      .grid-main {
        stroke: var(--color-50);
      }
      .grid-sub {
        stroke: var(--color-10);
      }
      .grid-subsub {
        stroke: var(--color-30);
      }
    }

    .g-sensor {
      polyline {
        transition: 0.5s;
        fill: none;
        stroke: blue;
        &.cable-connection {
          stroke: rgb(7, 147, 114);
        }
      }
    }

    .g-room {
      polygon {
        stroke: none !important;
        transition: 0.4s;
        // fill: var(--primary-color) !important;
        fill: var(--color-0);
        &:hover {
          fill: var(--primary-lighter-color);
        }
        &.room-hole {
          box-shadow: inset 3px 5px 2px rgb(0 0 0 / 0.4);
        }
        &.selected {
          fill: var(--primary-color);
        }
      }
    }

    .g-wall {
      transition: 0.4s;
      opacity: 1;
      .selected {
        polygon {
          fill: var(--primary-color);
        }
        circle {
          opacity: 1;
        }
      }

      polygon {
        &:hover {
          fill: var(--primary-lighter-color);
        }
        transition: 0.5s;
        fill-rule: nonzero;
      }
      circle {
        stroke: none;
        fill: var(--color-50);
        opacity: 0;
      }
      .type-outer {
        fill: var(--color-30);
        stroke: var(--color-60);
        .side-out {
          stroke: var(--color-60);
        }
      }
      .side-out {
        transition: 0.6s;
      }
      .type-inner {
        fill: var(--color-20);
        stroke: rgb(86, 86, 86);
      }
      .type-theoretic {
        opacity: 1;
        stroke: rgb(0, 145, 182);
        stroke-width: 3px;
      }
      .wall-fill {
        stroke: none;
      }
    }

    .g-door {
      g {
        transition: opacity 0.4s;
      }
      polygon {
        transition: 0.5s;
        fill: var(--color-0);
        stroke: none;
      }
      path {
        fill: none;
        stroke: var(--color-70);
        stroke-linecap: square;
      }
    }

    .g-window {
      polygon {
        transition: 0.5s;
        fill: var(--color-20);
        stroke: var(--color-60);
      }
      path {
        fill: none;
        stroke: var(--color-60);
        stroke-linecap: square;
      }
    }

    .plan-stair-plan {
      #walk-line,
      .measure-stair {
        display: none;
      }
    }
  }

  //<============== Sections ===============>//
  .section-welcome:not(.fullscreen) {
    // .all {
    //   transform: scale(0.6) translateX(25%);
    // }
    .render-img {
      opacity: 1 !important;
    }
    .g-window {
      g {
        opacity: 0 !important;
      }
    }
  }

  .section-basics {
    .house-wind-rose,
    .g-grid {
      transition: 2s;
      opacity: 0.7 !important;
    }
  }

  .section-tower {
    .room-f {
      transition: 2s;
      fill: var(--primary-color) !important;
    }
  }

  //<============== Sections ===============>//

  //<============== States ===============>//

  //<============== States ===============>//

  //<============== Tags ===============>//
  .tag-base-dimension {
    #L0-outer-WestWall-3,
    #L0-outer-NorthWall,
    #L0-outer-SouthWall-2,
    #L0-outer-EastWall-2 {
      .side-out {
        transition: 0.4s;
        stroke-width: 1 !important;
        stroke: var(--primary-color) !important;
        stroke-linecap: round;
      }
    }
  }

  .tag-orientation {
    .main-stop {
      stop-color: $sun-color;
    }
    .alt-stop {
      stop-color: var(--color-0);
    }
    .house-wind-rose {
      opacity: 0.7 !important;
    }
    #L0-Central {
      fill: $sun-color !important;
    }
    #L0-West,
    #L0-Central,
    #L0-East {
      shape-rendering: crispEdges;
      fill: url(#MyGradient) !important;
    }
    .g-sun {
      opacity: 0.7 !important;
      g {
        animation: spin-animation 12s infinite;
      }
    }
  }
  .tag-insulated {
    .g-wall *:not(.type-inner) polygon {
      fill: var(--primary-color);
      stroke: none !important;
    }
  }
  .tag-viewlines {
    #view-lines {
      opacity: 0.7 !important;
    }
  }
  //<============== Tags ===============>//
}

@keyframes spin-animation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}
